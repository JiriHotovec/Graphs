<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZS1//e1/Aee4PUYZTqLiAAAAAElFTkSuQmCC
</value>
  </data>
</root>