<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ouIAAAAASUVORK5CYII=
</value>
  </data>
</root>